generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AuthProvider {
  GOOGLE
}

model User {
  id              String       @id @default(uuid())
  email           String       @unique @db.VarChar(80)
  username        String       @db.VarChar(50)
  authProvider    AuthProvider @default(GOOGLE)
  bio             String       @default("") @db.VarChar(400)
  isAdmin         Boolean      @default(false)
  profileImageUrl String?
  reviews         Review[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)

  password String?


  @@map("USER")
}

model Review {
  id           String     @id @default(uuid())
  author       User       @relation(fields: [authorId], references: [id])
  authorId     String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  content      String     @db.VarChar(500)
  score        Int        @db.SmallInt()

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)

  @@map("REVIEW")
}

model Restaurant {
  id      String   @id @default(uuid())
  reviews Review[]

  // TODO

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)


  Menu Menu[]
  @@map("RESTAURANT")
}

model Category {
  id           String @id @default(uuid())
  name         String
  iconImageUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)


  @@map("CATEGORY")
}

model Option {
  id           String @id @default(uuid())
  name         String
  iconImageUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)


  @@map("OPTION")
}

model Menu {
  id           String     @id @default(uuid())
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  name         String
  description  String?
  price        Int?       @db.Integer()
  imageUrl     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)


  @@map("MENU")
}
